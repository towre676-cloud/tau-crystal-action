name: "tau-crystal-action"
description: "Receipt-first, Merkle-rooted attestation via pure bash (Lean optional via elan)."
author: "towre676-cloud"
branding:
  icon: shield
  color: purple

inputs:
  working-directory:
    description: "Path to measure"
    required: false
    default: "."
  install-elan:
    description: "Install Lean toolchain with elan"
    required: false
    default: "false"

outputs:
  verifier:
    description: "Absolute path to bundled verifier script"
    value: ${{ steps.expose.outputs.verifier }}
  receipt:
    description: "Path to receipt JSON"
    value: ${{ steps.outs.outputs.receipt }}
  receipt-path:
    description: "Path to receipt JSON (alias)"
    value: ${{ steps.outs.outputs.receipt }}
  chain-head:
    description: "Chain head (sha256)"
    value: ${{ steps.outs.outputs.head }}
  merkle-root:
    description: "Merkle root"
    value: ${{ steps.outs.outputs.root }}

runs:
  using: "composite"
  steps:
    - id: expose
      shell: bash
      run: |
        set -euo pipefail
        v="$GITHUB_ACTION_PATH/verify/verify-receipt.sh"
        chmod +x "$v"
        echo "verifier=$v" >> "$GITHUB_OUTPUT"

    - name: Install elan (optional)
      if: ${{ inputs.install-elan == 'true' }}
      shell: bash
      run: |
        set +H; umask 022
        curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y
        echo "$HOME/.elan/bin" >> "$GITHUB_PATH"

    - name: Generate receipt and wrapper digest
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -euo pipefail; set +H; umask 022
        mkdir -p .tau_ledger
        # chain head
        head="$(git rev-parse HEAD 2>/dev/null || true)"
        # sha256 command
        if command -v sha256sum >/dev/null 2>&1; then H=sha256sum; else H="shasum -a 256"; fi
        # wrapper digest (action.yml in this action)
        wrap="$($H "$GITHUB_ACTION_PATH/action.yml" | awk '{print $1}')"
        printf '%s\n' "$wrap" > .tau_ledger/action_wrapper.sha256
        # merkle root over tracked files
        if command -v sha256sum >/dev/null 2>&1; then
          root="$(git ls-files -z | sort -z | xargs -0 sha256sum | awk '{print $1}' | tr -d '\n' | sha256sum | awk '{print $1}')"
        else
          root="$(git ls-files | LC_ALL=C sort | xargs shasum -a 256 | awk '{print $1}' | tr -d '\n' | shasum -a 256 | awk '{print $1}')"
        fi
        # receipt JSON + CHAIN index
        rcpt=".tau_ledger/receipt.json"
        printf '{"chain_head":"%s","merkle_root":"%s","action_wrapper_sha":"%s"}\n' "$head" "$root" "$wrap" > "$rcpt"
        printf '%s %s\n' "$head" "$rcpt" > .tau_ledger/CHAIN

    - name: Collect outputs
      id: outs
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -euo pipefail
        rcpt=""; head=""; root=""
        [ -f .tau_ledger/CHAIN ] && { rcpt="$(awk '{print $2}' .tau_ledger/CHAIN || true)"; head="$(awk 'END{print $1}' .tau_ledger/CHAIN || true)"; }
        [ -n "$rcpt" ] && [ -f "$rcpt" ] && root="$(grep -oE '"merkle_root"[[:space:]]*:[[:space:]]*"[^"]*"' "$rcpt" | sed -E 's/.*:"([^"]*)".*/\1/')"
        echo "receipt=$rcpt" >> "$GITHUB_OUTPUT"
        echo "head=$head"   >> "$GITHUB_OUTPUT"
        echo "root=$root"   >> "$GITHUB_OUTPUT"
